[
["index.html", "Adventures in Macrofinancial Analysis: Extracting information from FX Options Preface", " Adventures in Macrofinancial Analysis: Extracting information from FX Options Jorge A. Chan-Lau International Monetary Fund and Credit Research Initiative, National University of Singapore 2018-02-01 Preface This set of lecture notes has been developed for short hands-on training courses on information extraction from foreign exchange (FX) options, namely reverse engineering option price quotes to obtain the market views on the probability distribution of the exchange rate. The main target audience are economists and analysts with a working understanding of econometric and quantitative methods as well as some basic familiarity with option pricing. Attending to the needs of this audience, the notes keep the mathematics and theory light and emphasize understanding the intuition behind pricing conventions, option valuation theory, and the numerical methods. By design, the topics are presented in a light-hearted manner from the perspective of an anti-heroine, B.A. Payne. Humor is a useful learning technique, something I learned from the late Salih Neftci during the numerous courses he delivered at the International Monetary Fund in the mid-2000s. A cheerful and playful state of mind certainly works wonders for absorbing the myriad of concepts these notes present in a rather compressed way. Some attentive readers may note that the main title for these series of notes, Adventures in Macrofinancial Analysis, is a shameless steal of the title of Sidney Resnick’s awesome book on stochastic processes (Resnick 1992). Reverse engineering security prices is mainly a numerical computation task. All calculations are performed using R (R Core Team 2017), executed within the RStudio IDE (RStudio Team 2015). I chose the R software environment because it incorporates state-of-the-art methods rapidly. Equally important, the environment allows integrating calculations and reporting which helped turning these notes into an easy-to-update dynamic document following the best practices of reproducible research (Xie (2015) and Gandrud (2015)). Rather than implementing the extraction methods from scratch, the calculations take advantage of the RND package (Hamidieh 2017) available in the CRAN repository. The RND package implements methods useful for a wide variety of options, not only FX. Armed with an understanding of the package and the concepts in these pages, the reader may want to explore later options markets other than the FX market.1 Feedback from readers helps to improve these lecture notes and keep them current. Please direct send comments and suggestions, which are always welcome, to jchanlauimf@gmail.com, with subject topic Lecture notes on FX options. References "],
["disclaimer.html", "Disclaimer", " Disclaimer During the writing of these notes the author has been affiliated with the International Monetary Fund (IMF) and the Credit Research Initiative (CRI), National University of Singapore. The views presented here are only those of the author and do not reflect the policy and views of the IMF and/or the CRI. The characters, institutions, and situations described in this document are all fictitious. Any resemblance to real persons, institutions, and incidents is purely coincidental. "],
["copyright.html", "Copyright", " Copyright This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. Please refer to and respect the license details if you use the material in these lecture notes. "],
["1-intro.html", "1 Introduction", " 1 Introduction B.A. Payne, a recent graduate from the Mostly Infallible Theory Academy (MIT), had just joined the Institutional Macro Fungibility Center (IMF). One of her responsibilities, as a member of the newly formed Multitask Committee on Markets (MCM), was to assess market views on exchange rates. Fresh from her recent participation in the just finalized United Kingdom Financial Services Action Plan (FSAP), her attention naturally turned to the British Pound. Skimming through almost a two-decade old Capital Markets report, Payne saw an interesting chart showing the possible distribution of exchange rates implied by option prices: Figure 1.1: It was 20 years ago today: IMF, Capital Markets Report, 1997 She asked Huff Vihn, the author of the box, for a coffee meeting to discuss information extraction from options. During the meeting, Vihn could only talk about three options: 50, 75, and 85. They were irrelevant to Payne, who was in the flower of her youth. But she could not get much information from Vihn. He had been eating only mushrooms during the past seven years. As Timothy Leary noted, a fungi-edible diet could wreak havoc in somebody’s deep neural networks. Fortunately, Vihn had kept a copy of his data retrieval file and promised to send it to Payne as soon as he was done with an important memorandum. Vihn warned Payne that all the data in the files corresponded to European instruments. Payne was perplexed: “Don’t they trade in New York also?”. Vihn smiled and clarified that European contracts could only be exercised at the contract maturity, which was exactly the situation for the IMF 50, 75, and 85 options. Payne made a note to read more about that. The next morning, Payne got the file and an set of charts. “Not bad for a two dollar investment in coffee, I knew I could use the geezer” she thought to herself. Payne rushed to update the file in the committee’s Reuters terminal, soon to be decommissioned due to budget reallocation priorities. Following good data practices, she then stored the data in a human-readable csv file. "],
["1-1-Data-exploration.html", "1.1 Examining the data", " 1.1 Examining the data Payne used RStudio to analyze the data. “How wonderful! A great package for a great price! Zero !!”. She first loaded a number of useful libraries, and an auxiliary source file using the following commands: rm(list=ls()) # Clean up memory library(ggplot2) # Graphic library library(lubridate) # Date manipulation library library(dplyr) # Auxiliary functions for data manipulation source(&quot;auxFunctions.R&quot;) # Auxiliary functions for this chapter Afterwards, it was a piece of cake to read the data file, and convert the dates to a format the graphics library ggplot2 could understand: filename = &quot;2018_IET_Options_data.csv&quot; data = read.csv(filename, header=TRUE) data$Dates = mdy_hm(as.character(data$Dates)) The data file contained weekly mid-prices for a number of financial variables, as shown below: Figure 1.2: Data frame structure Some of the variables were easy to interpret: Spot: the GBPUSD spot exchange rate, i.e. USD per GBP FWD3M: the 3-month GBPUSD forward exchange rate Rf: the 3-month GBP money market deposit rate, annualized (in percent) Rd: the 3-month USD money market deposit rate, annualized (in percent) Others were related to currency options, all with a 3-month maturity ATM: the at-the-money implied volatility of a GBPUSD option with strike price equal to spot RR25D3M: the price of a 25\\(\\Delta\\) risk reversal, in annualized volatility units (in percent) BF25D3M: the price of a 25\\(\\Delta\\) butterfly spread, in annualized volatility units (in percent) RR10D3M: the price of a 10\\(\\Delta\\) risk reversal, in annualized volatility units (in percent) BF10D3M: the price of a 10\\(\\Delta\\) butterfly spread, in annualized volatility units (in percent) The final variable, ImpliedRd, was the 3-month USD money market deposit rate implied from the forward rate, obtained from the covered interest rate parity equation: \\[ F = S \\frac{\\exp \\left(\\text{Implied } R_d \\times T\\right)}{\\exp \\left(R_f \\times T\\right)} \\] where \\(F\\) is the forward exchange rate, \\(S\\) is the spot exchange rate, \\(R_x, x= f, d\\) denotes the foreign and domestic deposit rates, and \\(T\\) is the time to maturity of the option. For the purpose of the analysis, the British pound is the foreign currency and the US dollar is the domestic currency. To see this, note that the British pound is the base currency or underlying asset since its price is given in US dollars, the numeraire currency. "],
["1-2-spot-exchange-rate.html", "1.2 Spot exchange rate", " 1.2 Spot exchange rate It was time to start eyeballing the data. First, she looked at the dynamics of the spot and forward exchange rate highlighting carefully the week of the Brexit referendum vote: # Plot of the spot exchange rate with vertical line at Brexit vote p1 = ggplot(data, aes(Dates, Spot)) + geom_line(colour=&quot;blue&quot;) p1 = p1 + geom_vline(xintercept=as.POSIXct(as.Date((&quot;2016-06-22 UTC&quot;))),linetype=&quot;longdash&quot;) p2 = ggplot(data, aes(Dates, FWD3M)) + geom_line(colour=&quot;red&quot;) p2 = p2 + geom_vline(xintercept=as.POSIXct(as.Date((&quot;2016-06-22 UTC&quot;))),linetype=&quot;longdash&quot;) multiplot(p1,p2,cols=1) Figure 1.3: USDGBP spot and forward exchange rate The behavior of both series were quite similar. Both the spot and forward rates had been range bound in the first half of 2016 and their behavior did not anticipate the exchange rate correction following the referendum. Payne proceed to analyze the other data series hoping they could provide additional information. "],
["1-3-implied-and-actual-usd-rates.html", "1.3 Implied and actual USD rates", " 1.3 Implied and actual USD rates A cursory glimpse of the data had shown that the actual USD deposit rate was different from the rate implied from the forward exchange rate. Payne examined this, by first calculating the rate spread: data$spreadRd = (data$ImpliedRd - data$Rd)*100 p3 = ggplot(data, aes(Dates, spreadRd)) + geom_line(colour=&quot;purple&quot;) + geom_hline(yintercept=0) p3 = p3 + geom_vline(xintercept=as.POSIXct(as.Date((&quot;2016-06-22 UTC&quot;))),linetype=&quot;longdash&quot;) p3 Figure 1.4: Implied and current 3-month USD deposit rate differential, in bps This was an interesting finding. Currency forwards, in combination with spot currency transactions and borrowing, are useful to create synthetic loans, as the diagram below shows: Figure 1.5: Synthetic USD loan In principle, there should not be major differences between the deposit rate and the synthetic loan rate. Whenever the implied USD rate exceeds the USD deposit rate, a covered interest parity violation, it signals a strong demand for USD satisfied mainly via the synthetic market rather than the cash market. If the rate differential is large and persistent, and above historically levels, it may reflect frictions and liquidity shortages preventing cross-market arbitrage. Payne observed that before 2015, the 3-month rate differential was small and exhibited low volatility. Starting 2015, the volatility of the rate differential increased, with covered interest parity violations favoring the synthetic US dollar rate. In many instances, the synthetic rate could exceed the cash market rate by as much as 40 bps. Violations, however were short-lived. In the post-Brexit period, deviations became larger and more persistent. At one moment, the synthetic and the cash rates were even, roughly coinciding with the Tories’ loss of their parliamentary majority in June 2017. The loss likely sparked hopes that the Brexit process may be halted or reverted. Since the last quarter of 2017, however, the gap between the synthetic and cash rates have widened. Based on the November 2017 Bank of England Inflation Report, Payne considered downward revisions of UK growth prospects and Brexit uncertainty were driving appetite for USD assets, leading to the recent widening of the implied USD rate spread. "],
["1-4-atm-option-volatility.html", "1.4 ATM option volatility", " 1.4 ATM option volatility Payne was not very familiar with currency options. She called Stan Ford, an old classmate who was a FX strategist in London, to get some hints. Unfortunately, nobody picked up the phone. Unbeknownst to her, the firm had replaced Stan with an impressive Asian ML/AI trading system, UZakAIDon. Depressed, Stan had checked into solitary confinement in an Italian monastery. So she picked up an old derivatives textbooks somebody had left in the bookcases outside her closet office. Although old, it looked like new as the shrink wrap had never been removed. She went straight to the chapter on options and looked at the payoff of an European call option at maturity: Figure 1.6: Call option payoff at maturity At maturity, the option buyer, who is long the call, has the right to exercise the option. If he does, he receives a payoff equal to \\(S_T -K\\). Clearly, exercising the option makes sense only when the value of the underlying is above the strike price the option is said to be in the money in-the-money (ITM). More generally, the option is ITM whenever the spot price is above the strike price, regardless of the time to maturity. When the value of the underlying is equal to the strike price, the option is at-the-money (ATM) Otherwise, it is out of the money (OTM). For the GBPUSD options, the underlying is the British pound, which is quoted as the amount of US dollars needed to buy one pound, or the GBPUSD exchange rate. The call option is worth more when the pound appreciates against the dollar. There were some tedious formulas and derivations related to the pricing of the options. Payne found the math insufferable. She had accepted the job at the IMF because her comparative advantage was policy making. In fact, she never appreciated the “mathiness” environment prevalent in graduate school. Payne felt a jolt of relief when she encountered a passage in the book stating that dealers quoted currency option prices as implied volatility, or vols. “Hence, all I need to do now is check what happens to the vols!” An examination of the call option chart provided some support for the market practice: for an OTM option, higher volatility implies a greater chance that the option ends ITM. For an ITM option, higher volatility implies higher payoffs while the downside risk is limited to losing the option premium.The higher the vol, the more expensive the currency option is. The book also noted that to obtain prices, the vol should be input into the benchmark Garman-Kolhagen currency option pricing model.2 This model, in turn, was derived from another one that explains the emergence of black holes in the universe, the celebrated Black-Scholes-Merton model.3 “I would check the theory later,” Payne mumbled to herself while plotting the ATM volatility: p4 = ggplot(data, aes(Dates, ATM)) + geom_line(colour=&quot;blue&quot;) + geom_hline(yintercept=0) p4 = p4 + geom_vline(xintercept=as.POSIXct(as.Date((&quot;2016-06-22 UTC&quot;))),linetype=&quot;longdash&quot;) p4 Figure 1.7: ATM volatility The chart showed that ATM volatility increased rapidly during the first half of 2016, but slumped rapidly after Brexit. During most of 2017 it had been in a narrow range, reflecting the range-like behavior of the exchange rate. The chart was somewhat puzzling. Apparently, options became more valuable in the months before the referendum. A more valuable call option seemingly implied a higher exchange rate, or an appreciation of the GBP against the USD. But this assertion was at odds with the behavior of the implied and actual USD rates. The solution to this puzzle was rather simple: put options also benefit from higher volatility. Figure 1.8: Put option payoff at maturity For an OTM option, higher volatility could push the exchange rate down, i.e. the pound depreciates against the dollar, forcing the option to be in the ITM. The downside is limited to losing the option premium. In contrast to the call option, upside gains are capped. But the buyer of the put still benefits more from increased volatility. We can conclude that ATM volatility is not enough to capture the market’s view on the direction of exchange rate changes. In contrast to academic textbooks, a number of market practitioners would attest that plain options are instruments for expressing views on volatility and not on market direction.4 Garman and Kohlhagen (1983)↩ Black and Scholes (1973) and Merton (1973)↩ Derman and Miller (2016)↩ "],
["1-5-risk-reversals.html", "1.5 Risk Reversals", " 1.5 Risk Reversals To assess directional views, it is necessary to look at risk reversals, a particular combination of simpler options. The options book, being old, did not say anything about risk reversals. Thankfully, the Google had offered the Home at a discount price during last Black Friday. Payne asked her Google Home what a risk reversal was and obtained the following answer from Wikipedia: Figure 1.9: Risk reversal definition (Wikipedia) A full understanding of the risk reversal requires knowing what \\(\\Delta\\) is. Even without that knowledge, however, we can use risk reversal quotes to assess the prices market participants place on potential exchange rate movements. Let’s start with the price quote of a risk reversal: \\[ RR_{25\\Delta} = \\sigma_{25\\Delta C} - \\sigma_{25\\Delta P} \\] We pay \\(\\sigma_{25\\Delta C}\\) for owning the call and offset this cost somewhat by selling the put at \\(\\sigma_{25\\Delta P}\\). At maturity, the payoff diagram of the risk reversal, long a call and short a put, both of them OTM, is: Figure 1.10: Risk reversal payoff at maturity When the call is more valuable than the put, the value of the risk reversal is positive. The buyer of the risk reversal values more events in which the GBPUSD exchange rate goes up. The opposite is true when the risk reversal is negative, i.e. the put is more valuable than the call. Risk reversals reveals potential asymmetries affecting exchange rate movements. In the case of the British pound, bullish market views are reflected in positive risk reversals. On the other hand, bearish views are reflected in negative risk reversals. Payne plotted both the 25\\(\\Delta\\) and 10\\(\\Delta\\) risk reversals: p5 = ggplot(data, aes(Dates, RR25D3M)) + geom_line(colour=&quot;red&quot;) + geom_hline(yintercept=0) p5 = p5 + geom_vline(xintercept=as.POSIXct(as.Date((&quot;2016-06-22 UTC&quot;))),linetype=&quot;longdash&quot;) p6 = ggplot(data, aes(Dates, RR10D3M)) + geom_line(colour=&quot;blue&quot;) + geom_hline(yintercept=0) p6 = p6 + geom_vline(xintercept=as.POSIXct(as.Date((&quot;2016-06-22 UTC&quot;))),linetype=&quot;longdash&quot;) multiplot(p5, p6, cols=1) Figure 1.11: GBPUSD Risk reversals Since 2013, risk reversals had been negative. There were some brief periods during which the 25\\(\\Delta\\) risk reversals turned positive. During the first half of 2016 both the 10\\(\\Delta\\) and the 25\\(\\Delta\\) risk reversals dropped substantially as markets placed more weight on the depreciation of the pound than on its appreciation. In combination with the ATM vol, the dramatic widening of the risk reversals anticipated the sharp exchange rate correction following the Brexit referendum. "],
["1-6-butterfly-spreads.html", "1.6 Butterfly spreads", " 1.6 Butterfly spreads “Quite interesting,” thought Payne. “Regardless of its perceived lack of ethics, creativity in the financial industry abounds.” She wondered what instrument could be useful for an investor expecting the exchange rate to experience either large movements on the upside or the downside. Remembering the risk reversal payoff chart, she concluded that it was a simple as flipping the short put position over the horizontal axis. That is, holding both a long OTM call and a long OTM put position should do the trick. She drew this chart, keeping the strikes of the put and the call at the values they had in the risk reversal: Figure 1.12: Strangle payoff at maturity Payne had just re-discovered the strangle. This instrument typically delivers a positive payoff when the underlying is very volatile. For instance, speculators use strangles to position themselves ahead of earning releases. Missing or exceeding earning expectations trigger large downside and upside movements in the stock price, benefiting strangle holders. Using the same convention as for the risk reversals, the price of a 25\\(\\Delta\\) strangle is: \\[ S_{25\\Delta} = \\sigma_{25\\Delta C} + \\sigma_{25\\Delta P} \\] The only glitch, however, was that the quoted prices were for butterfly spreads. FX dealers quote the price of a 25\\(\\Delta\\) butterfly spread as: \\[ BF_{25\\Delta} = \\frac{\\sigma_{25\\Delta C} + \\sigma_{25\\Delta P}}{2} - \\sigma_{ATM} \\] “This is very annoying but there must be a meaning to this convention,” Payne whispered to herself. Suddenly, she remembered what Stan, the now vanished FX trader, used to say: “We never put our own money in the trades.” Examining the risk reversal again, she realized that its cost, \\(\\sigma_{25\\Delta C} - \\sigma_{25\\Delta P}\\) had to be lower than buying a simple call \\(\\sigma_{25\\Delta C}\\). The sale of the put offset the purchase price of the call. For the strangle, she needed to buy both the call and the put. “How would I offset that? By selling two ATM options, of course!” she exclaimed. “What a strange convention but it does make a lot of sense” whispered Payne to herself. To understand better why FX dealers would prefer the butterfly to the strangle, Payne draw two diagrams, unaware that she was taking the first steps toward unlocking the concept of the volatility smile: Figure 1.13: Strangles vs. butterflies In both cases, the value of the strangle is the same and equal to \\(\\sigma_{25\\Delta C} + \\sigma_{25\\Delta P}\\). Taking half the strangle price and subtracting the \\(ATM\\) vol yield different butterfly values in cases A and B. Assuming roughly that the vols corresponded to the weights markets placed on certain strike price values, it became clear that the butterflies convey much more information than the strangles. In case A, the market prices upside and downside movements only slightly higher than the event that exchange rate stays close to the \\(ATM\\) level. In contrast, in case B, the market places way more weight on the events that the exchange rate will deviate substantially from the \\(ATM\\) level. She then plotted the butterfly quotes and obtained these charts: p7 = ggplot(data, aes(Dates, BF25D3M)) + geom_line(colour=&quot;red&quot;) + geom_hline(yintercept=0) p7 = p7 + geom_vline(xintercept=as.POSIXct(as.Date((&quot;2016-06-22 UTC&quot;))),linetype=&quot;longdash&quot;) p8 = ggplot(data, aes(Dates, BF10D3M)) + geom_line(colour=&quot;blue&quot;) + geom_hline(yintercept=0) p8 = p8 + geom_vline(xintercept=as.POSIXct(as.Date((&quot;2016-06-22 UTC&quot;))),linetype=&quot;longdash&quot;) multiplot(p7, p8, cols=1) Figure 1.14: GBPUSD Butterflies From 2014 onward, butterfly quotes had been mostly range bound. The notable exception was the first half of 2016, when butterfly quotes reached record high levels three to four times the average level observed in the previous three years. The combination of the \\(ATM\\) vol, the risk reversals, and the butterflies was indeed revealing much about market sentiment in the pre- and post- Brexit periods. "],
["2-a-modicum-of-option-pricing-theory.html", "2 A modicum of option pricing theory", " 2 A modicum of option pricing theory Through her non-technical analysis, Payne had gained a deeper understanding of the economic intuition of the pricing rationale of FX options and their information content. But she had already reached the stage where some basic option mathematics was necessary to understand how best to squeeze the information out of currency options. Pairing her Amazon Prime account with the newly acquired Alexa Amazon device, bought at a bargain Black Friday price, she ordered some derivatives books enjoying 2-day free delivery.5 When the books arrived, she started reading them and taking notes. Let’s take a discrete peek at these notes. Wilmott (2006) and Hull (2017).↩ "],
["2-1-the-delta-of-an-option.html", "2.1 The \\(\\Delta\\) of an option", " 2.1 The \\(\\Delta\\) of an option The first concept requiring clarification is the \\(\\Delta\\) of an option. Simply speaking, the \\(\\Delta\\) of an option measures the sensitivity of the instrument to changes in the value of the underlying, \\(S\\). For a call option, with price denoted as \\(C\\), its \\(\\Delta\\) is: \\[ \\Delta_C = \\frac{\\partial C}{\\partial S}.\\] Similarly, for a put the \\(\\Delta\\) is: \\[ \\Delta_P = \\frac{\\partial P}{\\partial S}.\\] Note that the \\(\\Delta\\) of a put is always negative. Hence, attention should be paid when looking at option structures. In a risk reversal, there is a short put. Hence, the \\(\\Delta\\) of this put is positive. In the strangle, there is a long put position and the \\(\\Delta\\) is negative. But the strike prices of these puts will always be referred to as \\(XY\\Delta\\), where \\(XY\\) is the absolute value of the \\(\\Delta\\) of the put option. Armed with this knowledge, it is straightforward to link the \\(\\Delta\\)s in the risk reversal to their corresponding strike prices: Figure 2.1: 25\\(\\Delta\\) risk reversal as well as in the strangle: Figure 2.2: 25\\(\\Delta\\) strangle and to figure out the strike points for different \\(\\Delta\\)s in a single type of instrument: Figure 2.3: 10\\(\\Delta\\) and 25\\(\\Delta\\) risk reversals The 10\\(\\Delta\\) strike points are way more out-of-the money than the 25\\(\\Delta\\) strike points. The quotes of the former can better capture tail movements of the exchange rate. On the other hand, however, the market is substantially more liquid for the 25\\(\\Delta\\) options than for the 10\\(\\Delta\\) options. In some instances, the latter could reflect not only the way the market weighs tail risk but a liquidity premium as well. The mathematics, examined in isolation, do not convey much intuition. Rather, the \\(\\Delta\\) of an option becomes important when placed in the context of dynamic replication, as explained in the following box. "],
["box-1-delta-and-dynamic-replication.html", "Box 1. \\(\\Delta\\) and dynamic replication", " Box 1. \\(\\Delta\\) and dynamic replication Dynamic replication consists in constructing a portfolio of simpler instruments that delivers the same payoff as an option. Several texts describe in detail the mechanics of dynamic replication, with all its mathematical bells and whistles. This box offers a simpler, more intuitive explanation. Let’s focus again on the payoff of a call option (Figure 5), and compare it to the payoff of a forward contract with strike price \\(K\\) and the same maturity as the option: Figure 2.4: Payoff of a forward contract at maturity The payoff of the forward contract, at maturity, matches that of the call option. Hence, whenever the value of the underlying, \\(S\\), exceeds the strike price \\(K\\) at maturity, we are indifferent between holding the call or the forward. What we are missing so far is an instrument with the same payoff as the option when \\(S &lt; K\\). Cash is the simple instrument that does the trick, with a flat payoff at maturity. So we would prefer to hold cash rather than the forward at maturity when \\(S &lt; K\\) at maturity: Figure 2.5: Payoff of a cash at maturity To replicate the option, we would hold a portfolio comprising some amount of cash and some amount of a forward contract. Rather than using the forward contract, we could replace it by using the underlying asset itself. The spot exchange market is more liquid than the forward market. Besides, referring to the mechanics of the synthetic USD loan, a forward purchase itself could be replicated with a spot purchase and offsetting domestic and foreign currency loans. The share of each instrument in the portfolio changes constantly: the more the option is ITM the closer its payoff resembles the payoff of the forward contract. Hence, to replicate the option we would hold more currency than cash. Viceversa, when the underlying declines and the option shifts from being ITM to OTM, we will replace the currency holdings with cash. The option’s \\(\\Delta\\) determines the right amount of currency needed to replicate the option. Figure 2.6: \\(\\Delta\\) of call option before maturity Suppose we enter the option contract when the spot rate is equal to the strike price (point B). For each call option, we hold \\(\\Delta_B\\) units of the currency. Being the derivative of the call option payoff, \\(\\Delta\\) is always less or equal than one. If the currency appreciates, the exchange rate moves to \\(S_C\\) (point C). The slope is steeper and \\(\\Delta_C &gt; \\Delta_B\\). We have to buy more currency to replicate the call. Conversely, if the currency depreciates, we reduce our currency holdings since \\(\\Delta_A &lt; \\Delta_B\\). "],
["2-2-pricing-foreign-currency-options.html", "2.2 Pricing foreign currency options", " 2.2 Pricing foreign currency options Remember that dealers quote currency option prices in terms of vols, or implied volatility. This parameter captures the costs involved in replicating an option. Let’s examine first what factors matter in the replication process. 2.2.1 Replicating the cost of a call option The price of a currency option should reflect the costs the derivatives dealer incurs to manufacture the option for the client and hedging the associated risks. Take the case of a dealer buying a call option from a client and holds it over a period of time \\(\\delta t\\). The dealer first borrows the price of the call, \\(C\\), at the domestic interest rate \\(R_d\\). The funding cost is equal to: \\[ R_d C_t \\delta t \\] The dealer’s exposure is equivalent to a long position on the call. To neutralize it, it uses a dynamic replication to construct a short position on the call. As Box 1 explains, this requires selling \\(\\Delta\\) units of the foreign currency. The proceeds from the sale, \\(\\Delta S\\), can be reinvested at the domestic rate. Since the dealer borrows the foreign currency to sell it short, it has to pay the foreign currency interest rate, \\(R_f\\). This operation nets: \\[ (R_d - R_f) \\Delta S_t \\delta t \\] During the period \\(\\delta t\\), the option loses money. To understand why, assume you buy the option at maturity. You either pay nothing, if the option is OTM, or the difference between the spot exchange rate and the strike, if the option is ITM. If the option has not expired, even if it is OTM there is a chance that it could end up ITM at expiration time, and its value would be positive. The change in the value due to the passage of time is: \\[ \\frac{\\partial C_t}{\\partial t} \\delta t \\] The option has a non-linear payoff so it is necessary to add an additional term capturing what we refer to as “convexity” gains, as explained for instance in Neftci (2008). Mathematically, this adjustment is \\[ \\frac{\\partial^2 C_t}{\\partial S^2} (\\delta S_t)^2 \\] The change in the time value of the option plus the net gains from hedging the long option position should offset the interest rate payments completely: \\[ \\frac{\\partial C_t}{\\partial t} \\delta t + (R_d - R_f) \\Delta S_t \\delta t + \\frac{\\partial^2 C}{\\partial S_t^2} (\\delta S_t)^2 = R_d C_t \\delta t \\] 2.2.2 The Garman-Kohlhagen equation In the particular case of European options, and under the assumption that the exchange rate follows a geometric Brownian motion, the equation above simplifies to: \\[ \\frac{\\partial C_t}{\\partial t} \\delta t + (R_d - R_f) \\Delta S_t \\delta t + \\sigma^2 S^2\\frac{\\partial^2 C_t}{\\partial S_t^2}\\delta t = R_d C_t \\delta t \\] After eliminating \\(\\delta t\\), the solution of the equation yields the formula for a call option at time \\(t\\) first derived by Garman and Kohlhagen (1983): \\[ C(K,S_t,R_d,R_f,T,\\sigma) = S_t \\exp(-R_f\\times(T-t))N(d_1) - K\\exp(-R_d \\times (T-t))N(d_2) \\] where: \\(K\\) is the strike price, \\(S_t\\) is the current spot exchange rate, \\(R_d\\) is the domestic interest rate, \\(R_f\\) is the foreign interest rate, \\(T-t\\) is the remaining life of an option maturing at time \\(T\\), \\(\\sigma\\) is the implied volatility of the exchange rate used to price the option, and: \\[ \\begin{aligned} d_1 &amp;= \\frac{\\ln(S_t/K)+(R_d-R_f+\\sigma^2/2)(T-t)}{\\sigma \\times (T-t)}\\\\ d_2 &amp;= d_1 - \\sigma \\times (T-t) \\end{aligned} \\] The price of a put option is: \\[ P(K,S_t,R_d,R_f,T,\\sigma) = K\\exp(-R_d \\times (T-t))N(-d_2) - S_t \\exp(-R_f\\times(T-t))N(-d_1) \\] References "],
["2-3-pricing-conventions.html", "2.3 Pricing conventions", " 2.3 Pricing conventions We can map the value of almost all the variables in the pricing equation to observed variables. The spot exchange rate is known, and the interest rates correspond to the lending and borrowing rates, in domestic and foreign currency, available to the derivatives dealers. The terms of the contract must specify the maturity and the strike price of the option. Add to this mix the implied volatility of the option, and the Garman-Kohlhagen formula delivers the option price, or premium. 2.3.1 \\(\\Delta\\)-implied strikes The market convention is to specify strike prices corresponding to a given \\(\\Delta\\). In such way, both parties are certain that the traded option would have certain specific characteristics regardless of the time it takes to agree on a price. Liquidity in currency options is mainly concentrated in the \\(ATM\\) and 25\\(\\Delta\\) strikes. For some currency pairs, the 10\\(\\Delta\\) strikes are also very liquid. To recover the strike as an exchange rate, one reverse-engineers the Garman-Kohlhagen formula using market reference benchmarks. For other strike prices, the dealer interpolates prices obtained from a volatility smile constructed using the price of the liquid \\(ATM\\), 25\\(\\Delta\\), and 10\\(\\Delta\\) options. 2.3.2 Implied volatility The price of the option is quoted as implied volatility, or vol, rather than an actual money premium. To obtain the latter, the client has to input the implied volatility and the \\(\\Delta\\) implied strike in the Garman-Kohlhagen formula. The other pricing inputs are set equal to market reference benchmarks. It is tempting to assume that implied volatility is either the historical realized volatility or a forecast of realized volatility during the life of the option. It is actually none of them. The value of the implied volatility is such that the associated option premium reflects a profit margin; the hedging costs of the dealer, which should account for market frictions; and the demand and supply conditions in the markets for the underlying and its derivatives instruments. Hedging is imperfect due to several frictions. The credit quality of the dealer and its counterparties affect the bid and ask rates for borrowing and lending in the domestic and foreign currency.6 Liquidity conditions also affect these rates, especially for larger transactions. Finally, transaction costs prevent continuous hedging leaving the dealer exposed at certain times. Exchange rates can jump, as it was the case of the GBPUSD in June 2016. Hedging jumps in the value of the underlying is extremely difficult, so some of the potential losses should be passed to the client. Although implied volatility does not necessarily reflect past or future volatility, it prices supply and demand conditions driven partly by market participants’ positioning at certain exchange rate values and ranges. This information, when interpreted within the volatility smile framework, is useful for assessing exchange rate risks. See Lou (2015)↩ "],
["3-the-volatility-smile.html", "3 The volatility smile", " 3 The volatility smile Quoting implied vols for a selected range of \\(\\Delta\\)s and maturities has some advantages. First, it singles specific option contracts. For instance, it is possible to monitor how the price of the constant 3-month maturity 25\\(\\Delta\\) call option evolves over time. At any time, the strike price is set such that \\(\\Delta\\) is equal to 0.25. If in contrast, we were monitoring a contract with a specific strike price in terms of the value of the exchange rate, the contract \\(\\Delta\\) would be changing constantly as the spot rate and interest rates are different. Second, the fact that prices are quoted in volatility units facilitates comparing prices at different points in time. Were the premium quoted in money terms, i.e. US dollar per British pound, it would be difficult to state whether the option has become cheaper or more expensive since the premium reflect the effect of several variables besides the implied volatility parameter. But the latter is the one that captures the cost of manufacturing the option, including demand and supply effects. The main advantage of the market convention, however, is that it identifies the three main unobserved drivers of currency option prices: level, slope, and curvature.7 We analyze them using the \\(ATM\\) vol, and the implied volatilities of the 25\\(\\Delta\\) call, and the 75\\(\\Delta\\) call. Dealers only quote the value of the first instrument. But some simple algebra and an application of the put-call parity yields the values of the last two instruments using the price quotes for the risk reversals and butterfly spreads: \\[ \\begin{aligned} \\sigma_{25\\Delta C} &amp;= \\sigma_{ATM} + BF_{25\\Delta} + \\frac{1}{2} RR_{25\\Delta}\\\\ \\sigma_{25\\Delta P} &amp;= \\sigma_{ATM} + BF_{25\\Delta} - \\frac{1}{2} RR_{25\\Delta}\\\\ \\sigma_{75\\Delta C} &amp;= \\sigma_{25\\Delta P} \\end{aligned} \\] With these three points, it is possible to fit a second-degree polynomial, or a non-parametric spline function associating an implied volatility to any \\(\\Delta\\). This is the volatility smile in the \\(\\Delta\\)- volatility space, and we can use it to price options with strikes other than the \\(ATM\\) and those implied by the 25\\(\\Delta\\) and 75\\(\\Delta\\). These three factors are analogous to the level, slope, and curvature factors that completely characterize the behavior of the yield curve (Litterman and Scheinkman 1991).↩ "],
["box-2-put-call-parity.html", "Box 2. Put-call parity", " Box 2. Put-call parity The combination of a short put position (sell the put) and a long call position (buy the call) mimics the payoff of a long forward position (buy the currency forward) with strike price equal to the forward rate, \\(F\\), at maturity: Figure 3.1: Put-call parity The following equality must hold: \\[ C(T) - P(T) = F(T) \\] where \\(C(T)\\), \\(P(T)\\), and \\(F(T)\\) are prices of the call, the put, and the forward at maturity, \\(T\\). If the contracts are entered at time 0, the present value of the option position, \\(C(0) - P(0)\\) should still be the same as the present value of the forward position, \\(F \\exp(-R_d \\times T)\\), where \\(R_d\\) is the domestic discount rate. But the value of \\(F\\) is determined by the covered interest parity conditions and equal to \\[ F= S(0) \\exp((R_d-R_f) \\times T ), \\] where \\(R_f\\) is the foreign discount rate. The put-call parity follows: \\[ C(0) - P(0) = S(0) \\exp(-R_f \\times T) \\] Taking derivatives with respect to \\(S(0)\\) yields the following relationship between the \\(\\Delta\\)s of a call and a put: \\[ \\Delta_C - \\Delta_P = \\exp(-R_f \\times T) \\] When the foreign interest rate is small and/or the time to maturity is short, the put-call parity is approximately \\[ \\Delta_C - \\Delta_P \\approx 1 \\] "],
["3-1-level.html", "3.1 Level", " 3.1 Level To see the association between the \\(ATM\\) vol and the level effect, Payne increased the \\(ATM\\), 25\\(\\Delta\\), and 75\\(\\Delta\\) vols by the same amount, \\(\\delta\\). She drew a chart showing the impact on the volatility smile before and after the vol increase: Figure 3.2: The \\(ATM\\) vol reflects the level of the smile The shape of the volatility smile did not change at all. This was the expected result: Payne remembered, from her high school algebra classes, that such transformation was equivalent to just an upward translation of the parabola determined by the three points. All things equal, changes in \\(\\sigma_{ATM}\\) only implies an upward or downward movements of the volatility smile, clearly a level effect. Note that the butterfly spread remains unchanged. "],
["3-2-slope.html", "3.2 Slope", " 3.2 Slope The other thought experiment Payne conducted was to change the values of the wings in the original chart. Basically, she increased the vol of the 75\\(\\Delta\\) call (or 25\\(\\Delta\\) put) by \\(\\delta\\), and reduced by the same amount the vol of the 25\\(\\Delta\\) call. The chart below captured the results of the experiment: Figure 3.3: The risk-reversal reflects the slope of the smile The difference between the vols in the wings increased. In other words, the absolute magnitude of the risk reversal, \\(|\\sigma_{25\\Delta C} - \\sigma_{75\\Delta C}|\\), increased. If we were to draw a line between the 25\\(\\Delta\\) and the 75\\(\\Delta\\), we would notice a steepening of the slope of the line. The risk reversal was clearly associated with the slope of the smile. "],
["3-3-curvature.html", "3.3 Curvature", " 3.3 Curvature “Suppose the \\(ATM\\) vol remains unchanged but the volatility in the wings decreases” thought Payne. She did that and drew a chart similar to the one below: Figure 3.4: The butterfly spread reflects the curvature of the smile Flat volatility smiles correspond to low values of the butterfly spread. With three instruments capturing the level, slope, and curvature of the volatility smile, it is possible to replicate a large range of shapes of the volatility smile as long as they are either strictly convex or concave. "],
["4-constructing-the-smile.html", "4 Constructing the smile", " 4 Constructing the smile Payne decided to focus her analysis on three specific dates (or episodes): January 8, 2016 (Pre-Brexit) June 24, 2016 (Brexit) December 30, 2016 (Post-Brexit) Roughly, the dates corresponded to six months ahead of the Brexit referendum, the week of the referendum, and the six months after the referendum. In addition to the prices of the 25\\(\\Delta\\) options, she needed the prices of the 10\\(\\Delta\\) options. The equations below, analogous to the ones used to obtain the information from the 25\\(\\Delta\\) options, would prove handy for obtaining them: \\[ \\begin{aligned} \\sigma_{10\\Delta C} &amp;= \\sigma_{ATM} + BF_{10\\Delta} + \\frac{1}{2} RR_{10\\Delta}\\\\ \\sigma_{10\\Delta P} &amp;= \\sigma_{ATM} + BF_{10\\Delta} - \\frac{1}{2} RR_{10\\Delta}\\\\ \\sigma_{90\\Delta C} &amp;= \\sigma_{10\\Delta P} \\end{aligned} \\] Before performing the calculations Payne had to select the appropriate software. One option, which everybody at the IMF used, was Excel. One advantage was that free files were available in any dark corner in the IMF building. But there were horror stories about Excel: once one was hooked on it, it was impossible to abandon it. Some of her colleagues considered it even worse than being hooked on meth: users were saddled with the mental suffering and distress but did not experience any highs at all. Matlab was the other available software she could use but it was very expensive. The money was better spent buying a new Honda Accord fully equipped. She decided to use R, a free software environment for statistical computing and graphics, with many available state-of-the-art libraries (R Core Team 2017). Furthermore, the savings could go into her defined-contribution retirement plan and allowed her to take the 50 option if she so desired. References "],
["4-1-selecting-the-data-for-specific-dates.html", "4.1 Selecting the data for specific dates", " 4.1 Selecting the data for specific dates After begging the Internal Technocratic Diktat (ITD) Committee for permission to install the non-white-listed software, Payne finally got R and the RStudio IDE installed and running in her laptop. To read the data for the specific dates of the analysis she typed: rm(list=ls()) # Clean up memory filename = &quot;2018_IET_Options_data.csv&quot; # Name of CSV data file data = read.csv(filename, header=TRUE) # Load datafile data$Dates = mdy_hm(as.character(data$Dates)) # convert dates to Date class rownames(data)=NULL # remove row names # Specify dates for analysis date01 = as.Date(&quot;2016-01-08 UTC&quot;) date02 = as.Date(&quot;2016-06-24 UTC&quot;) date03 = as.Date(&quot;2016-12-30 UTC&quot;) # Create data frame this.data this.data = rbind( data[which(data$Dates==date01),], data[which(data$Dates==date02),], data[which(data$Dates==date03),]) # Delete row names and change the names of the columns rownames(this.data) = NULL colnames(this.data) = c(&quot;Date&quot;,&quot;spot&quot;,&quot;forward&quot;,&quot;atm&quot;, &quot;rr25&quot;,&quot;bf25&quot;, &quot;rr10&quot;,&quot;bf10&quot;,&quot;rf&quot;,&quot;rd&quot;,&quot;imp_rd&quot;) "],
["4-2-calculation-of-implied-volatilities-vols.html", "4.2 Calculation of implied volatilities (vols)", " 4.2 Calculation of implied volatilities (vols) The following lines of code used the information from the risk reversals and the butterfly spreads to calculate the vols of the different calls and puts: # Vols are in percent, expressed them as simple numbers this.data$atm = this.data$atm/100 this.data$rr25 = this.data$rr25/100 this.data$bf25 = this.data$bf25/100 this.data$rr10 = this.data$rr10/100 this.data$bf10 = this.data$bf10/100 this.data$rf = this.data$rf/100 this.data$rd = this.data$rd/100 this.data$imp_rd=this.data$imp_rd/100 # We will use this.data repeatedly # Attach it to access its elements attach(this.data) # Recover vols for different deltas and put them in the data frame this.data$sigma10c = atm + bf10 + 0.5*rr10 this.data$sigma25c = atm + bf25 + 0.5*rr25 this.data$sigma75c = this.data$sigma25c - rr25 this.data$sigma90c = this.data$sigma10c - rr10 this.data$sigmaatm = atm Tenor = 3/12 # Maturity of options, 3 months, in years The tenor, or time to maturity of the option, was set to \\(\\frac{3}{12} = 0.25\\) years, to be consistent with the market convention for implied volatility, which is annualized. "],
["4-3-delta-atm-market-convention.html", "4.3 \\(\\Delta_{ATM}\\) market convention", " 4.3 \\(\\Delta_{ATM}\\) market convention So far, the only missing piece of information is the \\(\\Delta_{ATM}\\), or the \\(\\Delta\\) associated with the \\(ATM\\) option. “How do I calculate that number?” Payne wondered aloud. As the reader can guess, the definition of the \\(ATM\\) option depends on what convention the market uses. There are three different conventions: for retail products, the \\(ATM\\) strike is the current spot rate. In this case: \\[ \\begin{aligned} K_{ATM} &amp;= S\\\\ \\Delta_{ATM} &amp;= N \\left(\\frac{\\log(F/S) + \\frac{1}{2} \\sigma_{ATM}^2 T}{\\sigma_{ATM} \\sqrt T} \\right) \\end{aligned} \\] for emerging market currencies and/or options with maturities above one year, the \\(ATM\\) strike is the forward rate, or the \\(ATMF\\). In this case: \\[ \\begin{aligned} K_{ATM} &amp;= F\\\\ \\Delta_{ATM} &amp;= \\exp(-Rf \\times T)N(\\frac{1}{2}\\sigma_{ATM} \\sqrt T) \\end{aligned} \\] for major currency pair and/or options with maturities of one year or less, the \\(ATM\\) strike is the value of the exchange rate such that the call and the put have the same \\(\\Delta\\). In this case, \\(\\Delta_{ATM} \\simeq 0.5\\) and the strike price \\(K_{ATM}\\) is: \\[ \\begin{aligned} K_{ATM} &amp;= F \\times \\exp\\left( 0.5 \\sigma^2_{ATM}\\times T \\right)\\\\ \\Delta_{ATM} &amp;= 0.5\\times exp(-Rf \\times T) \\simeq 0.5 \\end{aligned} \\] The pair GBP-USD required using the third market convention. Payne calculated the strike of the \\(ATM\\) option and its \\(\\Delta\\): # Calculate the strike of the ATM option K_atm = forward*exp((0.5*(this.data$sigmaatm)^2)*Tenor) deltaATM = 0.5*exp(-rf*Tenor) "],
["4-4-a-rough-first-pass-on-the-volatility-smile.html", "4.4 A rough first pass on the volatility smile", " 4.4 A rough first pass on the volatility smile In the case of the GBPUSD, the \\(\\Delta_{ATM}\\) could be very well approximated by \\(0.5\\). To check the data, Payne decided to plot of the volatility smile. First, she created the data frame with the information the plot required: # Select only the vols for each delta list_variables = c(&quot;sigma10c&quot;, &quot;sigma25c&quot;, &quot;sigmaatm&quot;, &quot;sigma75c&quot;, &quot;sigma90c&quot;) # Read the data as a matrix vol_data = t(as.matrix(subset(this.data, select=list_variables))) # Group the deltas in a vector, to be used in the x-axis delta_vector = c(0.10, 0.25, 0.5, 0.75, 0.9) # Create the data frame for the chart vol.smile = data.frame(delta_vector, vol_data) rownames(vol.smile) = NULL colnames(vol.smile) = c(&quot;Delta&quot;,&quot;PreBrexit&quot;,&quot;Brexit&quot;,&quot;PostBrexit&quot;) and used ggplot to create the chart: library(reshape2) vol.data = melt(vol.smile, id=&quot;Delta&quot;) ggplot(data=vol.data, aes(x=Delta, y=value, shape=variable)) + geom_point(aes(colour=variable), size=4) + labs(y=&quot;vol&quot;) Figure 4.1: Rough volatility smiles "],
["4-5-a-more-refined-approximation-of-the-volatility-smile.html", "4.5 A more refined approximation of the volatility smile", " 4.5 A more refined approximation of the volatility smile It is possible to extend the volatility smile over a wider range of \\(\\Delta\\) values using a polynomial approximation of second degree. The function fit.Vol() in the auxFile.R takes as input the observed vols and their corresponding \\(\\Delta\\)s, and interpolates and extrapolates the vols for a wider range of \\(\\Delta\\) values: # Function fit.vol fits a polynomial of second degree to the volatility smile fit.Vol = function(data.vol, data.delta,delta.range) { poly.fit = lm(data.vol ~ poly(data.delta, 2, raw=TRUE)) # Use fitted polynomial to interpolate Delta-Vol Curve delta.square = delta.range*delta.range delta.interc = rep(1,length(delta.range)) X = cbind(delta.interc, delta.range, delta.square) iVolInterpol = t(t(X)*poly.fit$coefficients) iVolInterpol = rowSums(iVolInterpol) return(iVolInterpol) } Payne used the fitVol() function to fit the volatility smile for the pre-Brexit, Brexit, and post-Brexit dates: # Get the data points from the vol.smile data frame data.delta = vol.smile$Delta data.vol = vol.smile$PreBrexit # Interpolation and extrapolation range delta.range = seq(from=0.01, to = 0.99, by=0.005) # Obtain the volatility smiles smile.preBrexit = fit.Vol(vol.smile$PreBrexit, data.delta, delta.range) smile.Brexit = fit.Vol(vol.smile$Brexit, data.delta, delta.range) smile.postBrexit = fit.Vol(vol.smile$PostBrexit, data.delta, delta.range) # Group the extended volatility smiles in a data frame smile.df = data.frame(delta.range, smile.preBrexit, smile.Brexit, smile.postBrexit) rownames(smile.df) = NULL colnames(smile.df) = c(&quot;Delta&quot;,&quot;preBrexit&quot;,&quot;Brexit&quot;, &quot;postBrexit&quot;) # Create the chart library(reshape2) smile.data = melt(smile.df, id=&quot;Delta&quot;) ggplot(data = smile.data, aes(x=Delta, y=value, colour=variable)) + geom_line(size=1) + labs(y=&quot;vol&quot;) Figure 4.2: Fitted volatility smiles Before going further in her analysis, Payne asked herself a question: Question: In the week of the Brexit referendum, does it make sense that higher \\(\\Delta\\)s have higher implied volatility values? "],
["5-extracting-the-risk-neutral-density.html", "5 Extracting the risk-neutral density", " 5 Extracting the risk-neutral density “Why am I estimating volatility smiles?” Payne asked herself. But it was a rhetorical question since she knew the answer. The information contained in the volatility smile reflects the market view on the future probability distribution of the exchange rate at the time the option matures. But this market view is a risk-neutral view, i.e., in most cases, it does not reflect the future movements of the exchange rate. The next box offers an economic interpretation of risk neutrality abstracting from mathematical arguments.8 See Hull (2017), Cox, Ross, and Rubinstein (1979), and Wilmott (2006) for an accessible mathematical treatment.↩ "],
["box-3-why-market-views-are-risk-neutral-and-different-from-forecasts.html", "Box 3. Why market views are risk-neutral and different from forecasts", " Box 3. Why market views are risk-neutral and different from forecasts The market view is a risk-neutral view. In other words, it is not a forecast of the objective or real-world probability distribution.9 Rather, it is a view distilled from option prices that weigh the risk aversion of the different participants in the derivatives market: hedgers, speculators, and market makers. One example textbooks use is home insurance. Suppose the insurance premium you pay increases. Does it imply that your house is more likely to be damaged by a covered insurance event, i.e. fire, storm, etc? Not necessarily. A better example, in the context of exchange rates, is the demand for put options, or protection against a depreciation of the currency. This might be a low probability event. Assume a scenario in which clients are now more exposed to a depreciation. For instance, a substantial number of corporations replace foreign currency debt for domestic currency debt as foreign interest rates are low. Hedging operations increase the demand for puts, driving the vols of the puts up and leading to steeper risk reversals. Most of the hedging demand would be satisfied with OTM puts. Derivatives dealers, with short positions in these puts, need to ask for an additional premium. This premium compensates them for a potential increase in their hedging costs were the currency to depreciate. A depreciation will cause the OTM options to become ITM, with a shorter time to maturity, which translates into higher \\(\\Delta\\) hedging costs. In the scenario above, market participants’ expectations about real world exchange rate movements remain unchanged. But the skew of the volatility smile, as captured by the risk reversal, has increased. Furthermore, it is not easy to disentangle the risk aversion component from the expectations component. It may well be the case that actually the rising demand for puts reflects increased expectations of a depreciation and not increased exposure to foreign currency liabilities. As in the previous scenario, the skew of the volatility smile would increase for the same reasons. And we could also have a hybrid case, where both exchange rate expectations and increased exposure drive the demand for puts higher. As the box makes clear, the best interpretation of the risk-neutral distribution is as a risk-aversion weighted probability distribution. It shows whether the market fears certain events more than others, and whether this fear is increasing or subsiding in time. Although the risk-neutral distribution may not be a good forecast of exchange rate movements, it highlights events that are of concern to market participants. This information could guide both market strategy, and policy decisions as well, as they could point to potential sources of financial instability.10 See, for instance, Constantinides, Jackwerth, and Perrakis (2007) and Garcia, Ghysels, and Renault (2009).↩ Federal Reserve Bank of Minneapolis, Market based probabilities: a tool for policy makers.↩ "],
["5-1-extraction-techniques.html", "5.1 Extraction techniques", " 5.1 Extraction techniques Most of the extraction techniques, and arguably the most useful ones, are non-structural, i.e. they do not need to specify a model for the dynamics of the price of the underlying asset, or the exchange rate in this case. Non-structural techniques fall under one of two different categories:11 Parametric methods. Semiparametric methods Non-parametric methods. Parametric methods typically specify a distribution function for the exchange rate at the maturity time. Given a distribution \\(F\\), the price of an option with a strike price \\(K\\) is simply the present value of the expected payoff of the option. For a call option, with maturity and time to expiration \\(T\\), its present value is: \\[ C^F(K) = \\exp(-R_d\\times T) \\int_{K}^{\\infty} \\left( S_T - K\\right) dF(S_T; \\Lambda), \\] where \\(F\\) is a distribution function with parameters \\(\\Lambda\\). The best approximation to the market-implied distribution corresponds to the parameters that satisfy: \\[ \\arg\\min_{\\Lambda} \\sum_{j=1}^N |C^F(K_j) - C^{\\text{Market}}(K_j)|^2 \\] One widely used parametric method relies on the generalized beta distribution, which we will implement in a later section (Bookstaber and McDonald 1987). Semiparametric methods start with a particular density, i.e. the log-normal density or the Gaussian density, and add expansion terms in order to fit the observed market prices of the options, as in Jarrow and Rudd (1982). Non-parametric methods rely on the observation that the shape of the market call function, a plot of the value of the call against different strike prices, contains useful information about the probability distribution of the underlying. Specifically, Breeden and Litzenberger (1978) showed that the risk-neutral probability density, \\(q\\), is proportional to the second derivative of the call premium with respect to the strike price: \\[ \\frac{\\partial^2 C}{\\partial K^2} \\bigg\\rvert_{K=S} = \\exp(-R_d \\times T)q(S). \\] The next section explains how Payne implemented some of these methods. References "],
["5-2-infering-premia-and-strike-prices-from-vols.html", "5.2 Infering premia and strike prices from vols", " 5.2 Infering premia and strike prices from vols Non-structural methods require data on option prices for different strikes, or inferring the premium-strike price function from the volatility smile. Recall that the volatility smile data shows the price, in vols, of options with different \\(\\Delta\\). The auxFile.R contains the function get.strike(), which Payne used to find the strike prices corresponding to each \\(\\Delta\\) value: get.strike = function(vol,delta,S0,fwd,rf,Tenor) # Inputs # vol: implied volatility # S0 : spot exchange rate # fwd: forward exchange rate # rf: foreign currency interest rate # Tenor: time to maturity of the option # # Note: since we use the forward rate, the domestic # interest rate is not needed { aux = qnorm(delta*exp(rf*Tenor)) aux = aux*vol*sqrt(Tenor) aux = aux - 0.5*vol*vol*Tenor K = exp(-aux)*fwd return(K) } The obtain the range of strike prices corresponding to each value of \\(\\Delta\\) in the volatility smile, Payne used mapply() to apply the function get.strike() recursively to the vector containing the vol values, i.e. smile.df$preBrexit, and the \\(\\Delta\\) values, i.e. smile.df$Delta: K_preBrexit = mapply(get.strike,smile.df$preBrexit, smile.df$Delta, S0=spot[1], fwd=forward[1], rf=rf[1], Tenor=0.25) K_Brexit = mapply(get.strike,smile.df$Brexit, smile.df$Delta, S0=spot[2], fwd=forward[2], rf=rf[2], Tenor=0.25) K_postBrexit= mapply(get.strike,smile.df$postBrexit, smile.df$Delta, S0=spot[3], fwd=forward[3], rf=rf[3], Tenor=0.25) Once the strike prices are known, the Garman-Kohlhangen option pricing formula serves to obtain the option premium. Payne wrote a short function, GKoption.premium() to obtain the Garman-Kohlhagen option premium, and saved it in the auxFile.R file: GKoption.premium = function(K,sigma,S,Tenor,fwd,rf,option_type) { if (option_type ==&quot;c&quot;) {w=1} if (option_type ==&quot;p&quot;) {w=-1} d1 = log(fwd/K)+0.5*sigma*sigma*Tenor d1 = d1/(sigma*sqrt(Tenor)) d2 = d1 - sigma*sqrt(Tenor) rd = log(fwd/S)/Tenor + rf premium = exp(-rd*Tenor)*(w*fwd*pnorm(w*d1) - w*K*pnorm(w*d2)) return(premium) } "],
["5-3-generating-call-option-prices.html", "5.3 Generating call option prices", " 5.3 Generating call option prices Another call to the mapply() function allowed her to obtain the call premium recursively: Call_preBrexit = mapply(GKoption.premium, K_preBrexit, smile.df$preBrexit, S=spot[1],Tenor=Tenor,fwd=forward[1],rf=rf[1],option_type=&quot;c&quot;) Call_Brexit = mapply(GKoption.premium, K_Brexit, smile.df$Brexit, S=spot[2],Tenor=Tenor,fwd=forward[2],rf=rf[2],option_type=&quot;c&quot;) Call_postBrexit = mapply(GKoption.premium, K_postBrexit, smile.df$postBrexit, S=spot[3],Tenor=Tenor,fwd=forward[3],rf=rf[3],option_type=&quot;c&quot;) The data frame callstrike.df collects the call premium-strike functions for the selected dates: callstrike.df = data.frame(K_preBrexit, Call_preBrexit, K_Brexit, Call_Brexit, K_postBrexit, Call_postBrexit) which we will use to plot the call premium-strike function: ggplot(callstrike.df) + geom_line(aes(x=K_preBrexit,y=Call_preBrexit), col=&quot;red&quot;, size=1) + geom_line(aes(x=K_Brexit, y=Call_Brexit), col=&quot;darkcyan&quot;, size=1) + geom_line(aes(x=K_postBrexit, y=Call_postBrexit), col=&quot;blue&quot;, size=1) + labs(x=&quot;GBPUSD&quot;, y=&quot;Strike price&quot;) + geom_vline(xintercept = spot[1], col=&quot;red&quot;, linetype=&quot;longdash&quot;) + geom_vline(xintercept = spot[2], col=&quot;darkcyan&quot;, linetype=&quot;longdash&quot;) + geom_vline(xintercept = spot[3], col=&quot;blue&quot;, linetype=&quot;longdash&quot;) + geom_hline(yintercept = 0, col=&quot;black&quot;) Figure 5.1: Call premium-strike functions Question: the call premium-strike functions are downward sloping, i.e. the call premium is higher for lower strike prices. Does this make sense? Explain why. "],
["5-4-generating-put-option-prices.html", "5.4 Generating put option prices", " 5.4 Generating put option prices Similarly, it is possible to obtain the put premium-strike function. The corresponding commands to obtain the put premium are: Put_preBrexit = mapply(GKoption.premium, K_preBrexit, smile.df$preBrexit, S=spot[1],Tenor=Tenor,fwd=forward[1],rf=rf[1],option_type=&quot;p&quot;) Put_Brexit = mapply(GKoption.premium, K_Brexit, smile.df$Brexit, S=spot[2],Tenor=Tenor,fwd=forward[2],rf=rf[2],option_type=&quot;p&quot;) Put_postBrexit = mapply(GKoption.premium, K_postBrexit, smile.df$postBrexit, S=spot[3],Tenor=Tenor,fwd=forward[3],rf=rf[3],option_type=&quot;p&quot;) The needed data frame is: putstrike.df = data.frame(K_preBrexit, Put_preBrexit, K_Brexit, Put_Brexit, K_postBrexit, Put_postBrexit) and the plots are obtained with the following lines of code: ggplot(putstrike.df) + geom_line(aes(x=K_preBrexit,y=Put_preBrexit), col=&quot;red&quot;, size=1) + geom_line(aes(x=K_Brexit, y=Put_Brexit), col=&quot;darkcyan&quot;, size=1) + geom_line(aes(x=K_postBrexit, y=Put_postBrexit), col=&quot;blue&quot;, size=1) + labs(x=&quot;Strike price&quot;, y=&quot;Put premium&quot;) + geom_vline(xintercept = spot[1], col=&quot;red&quot;, linetype=&quot;longdash&quot;) + geom_vline(xintercept = spot[2], col=&quot;darkcyan&quot;, linetype=&quot;longdash&quot;) + geom_vline(xintercept = spot[3], col=&quot;blue&quot;, linetype=&quot;longdash&quot;) + geom_hline(yintercept = 0, col=&quot;black&quot;) Figure 5.2: Put premium-strike functions "],
["5-5-practical-implementation.html", "5.5 Practical Implementation", " 5.5 Practical Implementation Once the premium-strike functions are calculated, Hamidieh’s RND package serves to estimate the risk-neutral densities (Hamidieh 2017). The package implements a number of non-structural estimation methods. Payne estimated the risk-neutral density using the following methods: Generalized beta density (parametric). Edgeworth expansion (semi-parametric). the Shimko method (non-parametric). Parametric methods based on fitting a probability distribution to the data generate smooth distributions, especially compared to non-parametric methods based on the numerical computation of the second derivative of the premium-strike function. To examine this claim, we will replicate Payne’s calculations. Start by loading the package RND into memory: library(RND) References "],
["5-6-generalized-beta-distribution.html", "5.6 Generalized beta distribution", " 5.6 Generalized beta distribution The generalized beta distribution, introduced in option pricing by Bookstaber and McDonald (1987), is very flexible, and can accommodate asymmetries and a wide variety of fat tails. The RND implementation of the generalized beta distribution requires a number of inputs. To illustrate it, we start by extracting the distribution for the pre-Brexit date: # Input for inferring the generalized beta distribution in the pre-Brexit period r = imp_rd[1] # domestic interest rate te= Tenor # tenor of the option y = rf[1] # foreign interest rate s0= spot[1] # spot exchange rate call.premium = Call_preBrexit # vector of call premium values call.strikes = K_preBrexit # vector of corresponding call strikes put.premium = Put_preBrexit # vector of put premium values put.strikes = K_preBrexit # vector of corresponding put strikes Note that we do not use the observed domestic interest rate but rather the implied rate from the forward exchange rate. This choice is consistent with the pricing formulas used to infer the strike and premium, both of which were based in the forward rate. To extract the distribution, we use the function extract.gb.density(): gb.preBrexit = extract.gb.density(initial.values=c(NA,NA,NA,NA), r=r, te=te, y=y, s0=s0, market.calls=call.premium, call.strikes = call.strikes, call.weights =1, market.puts = put.premium, put.strikes = put.strikes, put.weights = 1, lambda=1, hessian.flag=F) The parameters call.weights and put.weights are set equal to 1, as there is no evidence that either type of options should weight more heavily when inferring the distribution. The penalty parameter lambda should be set equal to 1 always. The object gb.preBrexit contains the parameters of the generalized beta distribution, a, b, v, and w. To obtain the risk neutral density, we first set a range of strike prices, Krange: Krange = seq(0.9*min(K_preBrexit, K_Brexit, K_postBrexit), 1.1*max(K_preBrexit, K_Brexit, K_postBrexit), 0.01) and then use the function dgb() to obtain the risk neutral distribution using as inputs the estimated distribution parameters: gb = gb.preBrexit gb.rnd.preBrexit = dgb(Krange,gb$a, gb$b, gb$v, gb$w) We repeat the calculations for the Brexit date: r = imp_rd[2] y = rf[2] s0= spot[2] call.premium = Call_Brexit call.strikes = K_Brexit put.premium = Put_Brexit put.strikes = K_Brexit gb.Brexit = extract.gb.density(initial.values=c(NA,NA,NA,NA), r=r, te=te, y=y, s0=s0, market.calls=call.premium, call.strikes = call.strikes, call.weights =1, market.puts = put.premium, put.strikes = put.strikes, put.weights = 1, lambda=1, hessian.flag=F) gb = gb.Brexit gb.rnd.Brexit = dgb(Krange,gb$a, gb$b, gb$v, gb$w) and post-Brexit dates: r = imp_rd[3] y = rf[3] s0= spot[3] call.premium = Call_postBrexit call.strikes = K_postBrexit put.premium = Put_postBrexit put.strikes = K_postBrexit gb.postBrexit = extract.gb.density(initial.values=c(NA,NA,NA,NA), r=r, te=te, y=y, s0=s0, market.calls=call.premium, call.strikes = call.strikes, call.weights =1, market.puts = put.premium, put.strikes = put.strikes, put.weights = 1, lambda=1, hessian.flag=F) gb = gb.postBrexit gb.rnd.postBrexit = dgb(Krange,gb$a, gb$b, gb$v, gb$w) To compare the risk-neutral distributions, we create the data frame gb.rnd.df, and proceed to plot them using ggplot: gb.rnd.df = data.frame(Krange,gb.rnd.preBrexit, gb.rnd.Brexit, gb.rnd.postBrexit) ggplot(data=gb.rnd.df, aes(x=Krange)) + geom_line(aes(y=gb.rnd.preBrexit), col=&quot;red&quot;, size=1.25) + geom_line(aes(y=gb.rnd.Brexit), col=&quot;darkcyan&quot;, size=1.25) + geom_line(aes(y=gb.rnd.postBrexit), col=&quot;blue&quot;, size=1.25) + geom_vline(xintercept = spot[1], col=&quot;red&quot;, linetype=&quot;longdash&quot;) + geom_vline(xintercept = spot[2], col=&quot;darkcyan&quot;, linetype=&quot;longdash&quot;) + geom_vline(xintercept = spot[3], col=&quot;blue&quot;, linetype=&quot;longdash&quot;) + geom_hline(yintercept=0, col=&quot;black&quot;, size=0.5) + labs(x=&quot;GBPUSD&quot;, y=&quot;3-month risk-neutral density&quot;) Figure 5.3: Generalized beta risk neutral distributions.Pre-Brexit: red; Brexit: cyan; post-Brexit: blue References "],
["5-7-edgeworth-expansion.html", "5.7 Edgeworth expansion", " 5.7 Edgeworth expansion Jarrow and Rudd (1982) model the risk-neutral distribution by modifying the log-normal distribution using an Edgeworth expansion. Payne knew about a good reference on the latter topic, Hall (1992), but decided to put off reading it. She was fully aware that her next salary increase and promotion was at most weakly correlated with her technical knowledge. Rather the correlation was way stronger with the number of policy notes she could put together. So Payne put her best efforts to get the figures for her policy note. She started by calculating the risk neutral distributions for the pre-Brexit period. To replicate her work, we first collect the required input: r = imp_rd[1] # domestic interest rate te= Tenor # tenor of the option y = rf[1] # foreign interest rate s0= spot[1] # spot exchange rate call.premium = Call_preBrexit # vector of call premium values call.strikes = K_preBrexit # vector of corresponding call strikes The function extract.ew.density() calculates the parameters of the Edgeworth expansion: ew.preBrexit = extract.ew.density(initial.values = rep(NA,2), r=r, y=y, te=te, s0=s0, market.calls=call.premium, call.strikes = call.strikes, call.weights =1, lambda=1, hessian.flag=F, cl = list(maxit=10000)) which we then input into the function dew() to obtain the distribution. ew = ew.preBrexit ew.rnd.preBrexit = dew(Krange,r,y,te,s0,ew$sigma, ew$skew, ew$kurt) Let’s do this for the two other periods, Brexit: r = imp_rd[2] # domestic interest rate te= Tenor # tenor of the option y = rf[2] # foreign interest rate s0= spot[2] # spot exchange rate call.premium = Call_Brexit # vector of call premium values call.strikes = K_Brexit # vector of corresponding call strikes ew.Brexit = extract.ew.density(initial.values = rep(NA,2), r=r, y=y, te=te, s0=s0, market.calls=call.premium, call.strikes = call.strikes, call.weights =1, lambda=1, hessian.flag=F, cl = list(maxit=10000)) ew = ew.Brexit ew.rnd.Brexit = dew(Krange,r,y,te,s0,ew$sigma, ew$skew, ew$kurt) and post-Brexit: r = imp_rd[3] # domestic interest rate te= Tenor # tenor of the option y = rf[3] # foreign interest rate s0= spot[3] # spot exchange rate call.premium = Call_postBrexit # vector of call premium values call.strikes = K_postBrexit # vector of corresponding call strikes ew.postBrexit = extract.ew.density(initial.values = rep(NA,2), r=r, y=y, te=te, s0=s0, market.calls=call.premium, call.strikes = call.strikes, call.weights =1, lambda=1, hessian.flag=F, cl = list(maxit=10000)) ew = ew.postBrexit ew.rnd.postBrexit = dew(Krange,r,y,te,s0,ew$sigma, ew$skew, ew$kurt) To generate the plot, issue these commands: ew.rnd.df = data.frame(Krange, ew.rnd.preBrexit, ew.rnd.Brexit, ew.rnd.postBrexit) ggplot(data=ew.rnd.df, aes(x=Krange)) + geom_line(aes(y=ew.rnd.preBrexit), col=&quot;red&quot;, size=1.25) + geom_line(aes(y=ew.rnd.Brexit), col=&quot;darkcyan&quot;, size=1.25) + geom_line(aes(y=ew.rnd.postBrexit), col=&quot;blue&quot;, size=1.25) + geom_vline(xintercept = spot[1], col=&quot;red&quot;, linetype=&quot;longdash&quot;) + geom_vline(xintercept = spot[2], col=&quot;darkcyan&quot;, linetype=&quot;longdash&quot;) + geom_vline(xintercept = spot[3], col=&quot;blue&quot;, linetype=&quot;longdash&quot;) + geom_hline(yintercept=0, col=&quot;black&quot;, size=0.5) + labs(x=&quot;GBPUSD&quot;, y=&quot;3-month risk-neutral density&quot;) Figure 5.4: Edgeworth expansion risk neutral distributions.Pre-Brexit: red; Brexit: cyan; post-Brexit: blue References "],
["5-8-shimko-method.html", "5.8 Shimko method", " 5.8 Shimko method The method first calculates an implied probability function linking implied volatilities to strike prices (Shimko 1993). The function is then used to obtain the call premium-strike price function. Following Breeden and Litzenberger, the risk neutral density is obtained obtaining the second derivative of the call premium-strike price function numerically. To calculate the Shimko density in the pre-Brexit date, we first need to find the strike prices, in terms of exchange rate values, for the 10\\(\\Delta\\), 25\\(\\Delta\\), 50\\(\\Delta\\), 75\\(\\Delta\\) and 90\\(\\Delta\\) strikes, and match them with the corresponding call premia: vol.preBrexit = vol.data[1:5,3] # obtain implied volatility delta.shimko = vol.data[1:5,1] # obtain the deltas # Calculate the strike prices corresponding to the observed deltas Kshimko_preBrexit = mapply(get.strike,vol.preBrexit, delta.shimko, S0=spot[1], fwd=forward[1], rf=rf[1], Tenor=0.25) # Calculate the call premium for the observed deltas and corresponding strikes shimko_preBrexit = mapply(GKoption.premium, Kshimko_preBrexit, vol.preBrexit, S=spot[1],Tenor=Tenor,fwd=forward[1],rf=rf[1],option_type=&quot;c&quot;) The function in the RND package that calculates the parameters of the Shimko’s quadratic approximation to the volatility smile is extract.shimko.density(): # Inputs for extract.shimko.density() r = imp_rd[1] # implied doomestic rate te= Tenor # time to maturity y = rf[1] # foreign interest rate s0= spot[1] # spot exchange rate call.premium = shimko_preBrexit # call premia values call.strikes = Kshimko_preBrexit # option strikes b=r-y shimko.preBrexit = extract.shimko.density(market.calls=call.premium, call.strikes = call.strikes, r=r, y=b, t=te, s0=s0, lower=0, upper= 30) The parameters are then fed to the function dshimko() to obtain the risk neutral distribution for a wider range of strikes, Krange: shimko = shimko.preBrexit # not necessary, but facilitates copy-paste of formulas afterwards shimko.rnd.preBrexit = dshimko(r=r, te=Tenor, s0=s0, k=Krange, y=y, a0=shimko[[1]]$a0, a1=shimko[[1]]$a1, a2=shimko[[1]]$a2) We repeat the calculations for the Brexit date: vol.Brexit = vol.data[6:10,3] # obtain implied volatility Kshimko_Brexit = mapply(get.strike,vol.Brexit, delta.shimko, S0=spot[2], fwd=forward[2], rf=rf[2], Tenor=0.25) shimko_Brexit = mapply(GKoption.premium, Kshimko_Brexit, vol.Brexit, S=spot[2],Tenor=Tenor,fwd=forward[2],rf=rf[2],option_type=&quot;c&quot;) r = imp_rd[2] y = rf[2] s0= spot[2] call.premium = shimko_Brexit call.strikes = Kshimko_Brexit b=r-y shimko.Brexit = extract.shimko.density(market.calls=call.premium, call.strikes = call.strikes, r=r, y=b, t=te, s0=s0, lower=0, upper= 30) shimko = shimko.Brexit shimko.rnd.Brexit = dshimko(r=r, te=Tenor, s0=s0, k=Krange, y=y, a0=shimko[[1]]$a0, a1=shimko[[1]]$a1, a2=shimko[[1]]$a2) and the post-Brexit date: vol.postBrexit = vol.data[11:15,3] Kshimko_postBrexit = mapply(get.strike,vol.postBrexit, delta.shimko, S0=spot[3], fwd=forward[3], rf=rf[3], Tenor=0.25) shimko_postBrexit = mapply(GKoption.premium, Kshimko_postBrexit, vol.postBrexit, S=spot[3],Tenor=Tenor,fwd=forward[3],rf=rf[3],option_type=&quot;c&quot;) r = imp_rd[3] y = rf[3] s0= spot[3] call.premium = shimko_postBrexit call.strikes = Kshimko_postBrexit b=r-y shimko.postBrexit = extract.shimko.density(market.calls=call.premium, call.strikes = call.strikes, r=r, y=b, t=te, s0=s0, lower=0, upper= 30) shimko = shimko.postBrexit shimko.rnd.postBrexit = dshimko(r=r, te=Tenor, s0=s0, k=Krange, y=y, a0=shimko[[1]]$a0, a1=shimko[[1]]$a1, a2=shimko[[1]]$a2) To compare the risk-neutral distributions, we create the data frame shimko.rnd.df, and proceed to plot them using ggplot: shimko.rnd.df = data.frame(Krange,shimko.rnd.preBrexit, shimko.rnd.Brexit, shimko.rnd.postBrexit) ggplot(data=shimko.rnd.df, aes(x=Krange)) + geom_line(aes(y=shimko.rnd.preBrexit), col=&quot;red&quot;, size=1.25) + geom_line(aes(y=shimko.rnd.Brexit), col=&quot;darkcyan&quot;, size=1.5) + geom_line(aes(y=shimko.rnd.postBrexit), col=&quot;blue&quot;, size=1.25) + geom_vline(xintercept = spot[1], col=&quot;red&quot;, linetype=&quot;longdash&quot;) + geom_vline(xintercept = spot[2], col=&quot;darkcyan&quot;, linetype=&quot;longdash&quot;) + geom_vline(xintercept = spot[3], col=&quot;blue&quot;, linetype=&quot;longdash&quot;) + geom_hline(yintercept=0, col=&quot;black&quot;, size=0.5) + labs(x=&quot;GBPUSD&quot;, y=&quot;3-month risk-neutral density&quot;) Figure 5.5: Shimnko risk neutral distributions.Pre-Brexit: red; Brexit: cyan; post-Brexit: blue The pre-Brexit and Brexit exchange rate distributions are well behaved. This is not the case for the post-Brexit distribution. Generally, methods that use numerical differentiation could generate unstable or misbehaved distributions when approximating the premium-strike function or the implied volatility-strike function directly. Results improve substantially when we generate the premium-strike curve from a fitted implied volatility-delta curve.12 References "],
["5-9-a-graphical-comparison-of-different-methods.html", "5.9 A graphical comparison of different methods", " 5.9 A graphical comparison of different methods We start with the pre-Brexit distributions. Generate the plot with the following commands: ggplot(data=shimko.rnd.df, aes(x=Krange)) + geom_line(aes(y=shimko.rnd.preBrexit), col=&quot;red&quot;, size=1.25) + geom_line(data=gb.rnd.df, aes(x=Krange, y=gb.rnd.preBrexit), col=&quot;darkcyan&quot;, size=1.25) + geom_line(data=ew.rnd.df, aes(x=Krange, y=ew.rnd.preBrexit), col=&quot;blue&quot;, size=1.25) + geom_hline(yintercept=0, col=&quot;black&quot;, size=0.5) + labs(x=&quot;GBPUSD&quot;, y=&quot;3-month risk-neutral density&quot;) Figure 5.6: Pre-Brexit risk neutral distributions.Generalized beta: cyan; Edgeworth expansion: blue; Shimko: red. The generalized beta distribution and Shimko methods generate very similar pre-Brexit distributions. The Edgeworth expansion generates fatter tails, especially in the left tail. The Brexit distributions seem very different across methods (figure below). The Edgeworth expansion again generates fatter left tails and small negative probabilities in the right tail. The Shimko distribution has thinner tails and less newness than the other two distributions. ggplot(data=shimko.rnd.df, aes(x=Krange)) + geom_line(aes(y=shimko.rnd.Brexit), col=&quot;red&quot;, size=1.25) + geom_line(data=gb.rnd.df, aes(x=Krange, y=gb.rnd.Brexit), col=&quot;darkcyan&quot;, size=1.25) + geom_line(data=ew.rnd.df, aes(x=Krange, y=ew.rnd.Brexit), col=&quot;blue&quot;, size=1.25) + geom_hline(yintercept=0, col=&quot;black&quot;, size=0.5) + labs(x=&quot;GBPUSD&quot;, y=&quot;3-month risk-neutral density&quot;) Figure 5.7: Brexit risk neutral distributions.Generalized beta: cyan; Edgeworth expansion: blue; Shimko: red. Finally, we analyze the post-Brexit distributions (figure below). We omit analyzing the Shimko distribution due to its counterintuitive shape. For the GBP-USD pair, the Edgeworth expansion appears to be more skewed and generate fatter left tails than the generalized beta distribution. ggplot(data=shimko.rnd.df, aes(x=Krange)) + geom_line(data=gb.rnd.df, aes(x=Krange, y=gb.rnd.postBrexit), col=&quot;darkcyan&quot;, size=1.25) + geom_line(data=ew.rnd.df, aes(x=Krange, y=ew.rnd.postBrexit), col=&quot;blue&quot;, size=1.25) + geom_hline(yintercept=0, col=&quot;black&quot;, size=0.5) + labs(x=&quot;GBPUSD&quot;, y=&quot;3-month risk-neutral density&quot;) Figure 5.8: Post-Brexit risk neutral distributions.Generalized beta: cyan; Edgeworth expansion: blue. "],
["6-epilogue.html", "6 Epilogue", " 6 Epilogue With all calculations ready, it was time for Payne to wrap up its analysis and to propose a small text box for the U.K. policy note. Once it was ready, she send the draft to her manager, F.L. Atterman. Atterman considered the box could be included in the note once Payne took on board his editorial suggestions. It was not a bad outcome at all. Atterman also suggested Payne to attempt to incorporate the FX option information in a forecasting model. Payne wrote a note to enroll in the internal forecasting courses offered by the Internal Cognitive Development (ICD) department. While walking back to her office Payne crossed paths with Huff. Although he waved at her, she completely ignored him. “No loss at all, as the old man is no longer of any use,” thought Payne. Her mind was already busy strategizing on whom her coffee money and her time were better spent in order to advance her career prospects. "],
["A-paynes-policy-note-box.html", "A Payne’s policy note box", " A Payne’s policy note box Brexit: a FX options post-mortem Markets reacted strongly to the U.K.vote to leave the European Union in June 2016. Ahead of the vote, the exchange rate had been declining steadily from a peak of 1.7 USD/GBP in mid-2014 to around 1.4 USD/GBP at the beginning of 2016 and held steady at that level during the first half of 2016. In the week following the vote, however, the British pound fell by more than ten percent against the U.S. dollar, reflecting partly concerns about the decline of London as a major financial center. The pound continued weakening during most of 2016, but started gaining ground during most of 2017, rising to about 1.35 USD/GBP in December 2017 from as low as 1.2 USD/GBP in early 2017. The strengthening of the pound in late 2017 may actually be hiding weaknesses ahead for the British currency. This is evident from violations in the covered interest parity relationship. By end-2017, the widening differential between the US dollar rate implied in the forward market the US dollar money market rate signals a strong demand for U.S. dollars. The rate differential narrowed and almost vanished earlier in 2017 as the Tories started losing their grip on power which culminated with their loss of a parliamentary majority. Concerns about economic growth prospects in the country, as outlined in the latest Inflation Report, appear to be driving the interest rate differential wider. Although the exchange rate did not appear to anticipate the turmoil of the Brexit vote, the FX options market had already started discounting an unfavorable outcome to those in the stay camp. The value of risk reversals, a combination of a short position on a put option with a long position in a call option, is positive if markets are bullish on the pound. When markets are bearish, the risk reversal is negative. Despite the exchange rate fluctuating within a narrow range band, the 3-month 10 \\(\\Delta\\) risk reversal contracts showed markets increasingly weighted more large downside movements in the exchange rate than upside movements ahead of the vote. The butterfly spread contracts complemented the information from the risk reversal contracts. A positive contract value indicates that the exchange rate is more likely to deviate significantly from its current value. The deviations can be either positive or negative. The 3-month 10 \\(\\Delta\\) butterfly spread contracts indicated large movements were expected in early 2016. In combination of the risk reversals, the option markets were revealing increased concerns about the impact of Brexit on the exchange rate. The impact of the Brexit vote can be gauged directly from the 3-month exchange rate probability distributions implied from option markets. The red line shows the implied distribution as of January 8, 2016; and the dark cyan line the distribution as of June 24, 2016. The vertical lines show the respective spot exchange rates. The Brexit vote has turned markets increasingly bearish on the British pound and some small but positive weight was assigned to the event that the pound could trade at par with the U.S. dollar. As of December 1, 2017, market sentiment has stabilized as the bearishness faded away as the probability distribution in blue shows. Compared with the pre-Brexit distribution, the market considers that the range of possible exchange rate realizations is narrower. Still, the pound was still trading ten percent below its level just before the Brexit vote, and the violation of covered interest parity justifies increased vigilance. "],
["B-bloomberg-training-video.html", "B Bloomberg Training Video", " B Bloomberg Training Video Bloomberg is one of the main providers of financial data, including price quotes for the FX option contracts discussed in these notes. The video below provides an overview of the FX option functionality available in the Bloomberg terminals, including the rapid generation of volatility smiles and volatility surfaces. https://youtu.be/wpcvGhYN4eQ "],
["references.html", "References", " References "]
]
